{
  "classification": "INCOMPAT√çVEL",
  "score": 30,
  "maxScore": 100,
  "issues": [
    {
      "severity": "CRITICAL",
      "message": "package.json n√£o encontrado",
      "recommendation": "Projeto deve ter package.json v√°lido"
    },
    {
      "severity": "SUCCESS",
      "message": "Estrutura de projeto completa"
    },
    {
      "severity": "CRITICAL",
      "message": "Arquivo principal do servidor n√£o encontrado",
      "recommendation": "Criar server/index.ts com configura√ß√£o Express"
    },
    {
      "severity": "MAJOR",
      "message": "Sistema de rotas n√£o encontrado",
      "recommendation": "Criar server/routes.ts para organiza√ß√£o das rotas"
    },
    {
      "severity": "MAJOR",
      "message": "Fun√ß√£o registerRoutes n√£o encontrada",
      "recommendation": "Implementar fun√ß√£o registerRoutes no servidor"
    },
    {
      "severity": "MINOR",
      "message": "TypeScript n√£o configurado",
      "recommendation": "Adicionar tsconfig.json recomendado"
    }
  ],
  "recommendations": [
    "‚ùå Projeto requer modifica√ß√µes significativas",
    "üìñ Consultar: NEW-PROJECT-GUIDE.md para projetos novos",
    "üîß Resolver problemas cr√≠ticos antes de continuar"
  ],
  "requirements": [],
  "analysis": {
    "projectStructure": {
      "requiredDirs": [
        "server",
        "client",
        "shared"
      ],
      "foundDirs": [
        "server",
        "client",
        "shared"
      ],
      "missingDirs": []
    },
    "serverFiles": [],
    "moduleSystem": {
      "type": "UNKNOWN",
      "hasESImports": false,
      "hasCommonJSRequire": false
    },
    "routeSystem": {
      "type": "NONE",
      "hasRegisterRoutes": false,
      "usesExpress": false
    },
    "typescript": {
      "configured": false
    },
    "existingFoundation": {
      "installed": false,
      "hasDirectory": false
    }
  },
  "scorePercentage": 30
}